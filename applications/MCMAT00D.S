; Do not change filenames or add or remove FILEI/FILEO statements using an editor. Use Cube/Application Manager.
RUN PGM=MATRIX PRNFILE="C:\KumarA\NERPM\CUBE\MCMAT00C.PRN" MSG='HBW'
FILEI MATI[1] = "{OUTDIR}\PTRIPSMC.MAT"
FILEI MATI[10] = "C:\KumarA\NERPM\CUBE\STATAM.{alt}{Year}"
FILEI ZDATI[3] = "C:\KumarA\NERPM\CUBE\ZONAL1.DBF"
FILEI ZDATI[2] = "C:\KumarA\NERPM\CUBE\ZACCESAM1.DBF"
FILEO MATO[1] = "C:\KumarA\NERPM\CUBE\HTWORK.MAT",
 MO=151-166,
 NAME= TOTAUTOS,DA,SHRIDE,SR1PASS,SR2PASS,TRANSIT,WALKACC,WALKLOC,WALKPRE,WLKPREB,WLKPRER,AUTOACC,AUTOLOC,AUTOPRE,AUTOPREB,AUTORAIL,
 DEC=16*S
FILEI LOOKUPI[2] = "C:\KumarA\NERPM\CUBE\MC_COEFFICIENTS.CSV"
FILEI LOOKUPI[1] = "C:\KumarA\NERPM\CUBE\MC_CONSTANTS.CSV"
FILEI ZDATI[1] = "C:\KumarA\NERPM\CUBE\ZINCOMAM1.DBF"
FILEI MATI[9] = "C:\KumarA\NERPM\CUBE\TSKIMAM6.MAT"
FILEI MATI[8] = "C:\KumarA\NERPM\CUBE\TSKIMAM5.MAT"
FILEI MATI[7] = "C:\KumarA\NERPM\CUBE\TSKIMAM4.MAT"
FILEI MATI[6] = "C:\KumarA\NERPM\CUBE\TSKIMAM3.MAT"
FILEI MATI[5] = "C:\KumarA\NERPM\CUBE\TSKIMAM2.MAT"
FILEI MATI[4] = "C:\KumarA\NERPM\CUBE\TSKIMAM1.MAT"
FILEI MATI[3] = "C:\KumarA\NERPM\CUBE\HVSKIMSMC.MAT"
FILEI MATI[2] = "C:\KumarA\NERPM\CUBE\HSKIMSMC.MAT"


  MW[1]=MI.1.HBW 
  ;MW[2]=MI.1.HBO ; NOT USED IN THIS STEP
  ;MW[3]=MI.1.NHB ; NOT USED IN THIS STEP

;Constants
lookup, name=constants, 
lookup[1]=1, result=2, 
interpolate=n, , LIST=Y, lookupi=1
;K=CONSTANT (HBW)
if (i=1)
OC2=CONSTANTS(1,1)
OC3=CONSTANTS(1,2)
AOC=CONSTANTS(1,3)
TASPD=CONSTANTS(1,4)
OCTA=CONSTANTS(1,5) 
;;WALKPATRAN=CONSTANTS(1,6)
;;WALKPAPR=CONSTANTS(1,7)  
WALKPAKR=CONSTANTS(1,8)  
K_DA_AUTO0=CONSTANTS(1,9)
K_DA_AUTO1=CONSTANTS(1,10)
K_DA_AUTO2=CONSTANTS(1,11)
K_SR1PASS_AUTO0=CONSTANTS(1,12)
K_SR1PASS_AUTO1=CONSTANTS(1,13)
K_SR1PASS_AUTO2=CONSTANTS(1,14)
K_SR2PASS_AUTO0=CONSTANTS(1,15)
K_SR2PASS_AUTO1=CONSTANTS(1,16)
K_SR2PASS_AUTO2=CONSTANTS(1,17)
K_WALKLOC_AUTO0=CONSTANTS(1,18)
K_WALKLOC_AUTO1=CONSTANTS(1,19)
K_WALKLOC_AUTO2=CONSTANTS(1,20)
K_WLKPREB_AUTO0=CONSTANTS(1,21)
K_WLKPREB_AUTO1=CONSTANTS(1,22)
K_WLKPREB_AUTO2=CONSTANTS(1,23)
K_WLKPRER_AUTO0=CONSTANTS(1,24)
K_WLKPRER_AUTO1=CONSTANTS(1,25)
K_WLKPRER_AUTO2=CONSTANTS(1,26)
K_AUTOLOC_AUTO0=CONSTANTS(1,27)
K_AUTOLOC_AUTO1=CONSTANTS(1,28)
K_AUTOLOC_AUTO2=CONSTANTS(1,29)
K_AUTOPREB_AUTO0=CONSTANTS(1,30)
K_AUTOPREB_AUTO1=CONSTANTS(1,31)
K_AUTOPREB_AUTO2=CONSTANTS(1,32)
K_AUTORAIL_AUTO0=CONSTANTS(1,33)
K_AUTORAIL_AUTO1=CONSTANTS(1,34)
K_AUTORAIL_AUTO2=CONSTANTS(1,35)
endif

;Coefficients
lookup, name=coefficients, 
lookup[1]=1, result=2, 
interpolate=n, LIST=Y, lookupi=2
;Coefficients (HBW)
if (i=1)
TERMCOEF=COEFFICIENTS(1,1)  
AAUTORUNC=COEFFICIENTS(1,2) 
CTOLL=COEFFICIENTS(1,3)     
HOVDIFFC=COEFFICIENTS(1,4)  
ACOSTC=COEFFICIENTS(1,5)    
AUTOCINF=COEFFICIENTS(1,6)  
PARKC=COEFFICIENTS(1,7)     
AUTOINFC=COEFFICIENTS(1,8)  
PARKINFC=COEFFICIENTS(1,9)  
AU1DTC=COEFFICIENTS(1,10)   
AU1XPC=COEFFICIENTS(1,11)   
AU1XAC=COEFFICIENTS(1,12)   
AU2DTC=COEFFICIENTS(1,13)   
AU2XPC=COEFFICIENTS(1,14)   
AU2XAC=COEFFICIENTS(1,15)   
AU3DTC=COEFFICIENTS(1,16)   
AU3XPC=COEFFICIENTS(1,17)   
AU3XAC=COEFFICIENTS(1,18)   
WALKC=COEFFICIENTS(1,19)    
TRUNC=COEFFICIENTS(1,20)    
WTTAC=COEFFICIENTS(1,21)    
WTTBC=COEFFICIENTS(1,22)    
XFTC=COEFFICIENTS(1,23)     
NXFC=COEFFICIENTS(1,24)     
FAREC=COEFFICIENTS(1,25)    
FAREINFC=COEFFICIENTS(1,26) 
TWLDTC=COEFFICIENTS(1,27)   
TWLXPC=COEFFICIENTS(1,28)   
TWLXAC=COEFFICIENTS(1,29)   
TWEDTC=COEFFICIENTS(1,30)   
TWEXPC=COEFFICIENTS(1,31)   
TWEXAC=COEFFICIENTS(1,32)   
TWRDTC=COEFFICIENTS(1,33)   
TWRXPC=COEFFICIENTS(1,34)   
TWRXAC=COEFFICIENTS(1,35)   
TALDTC=COEFFICIENTS(1,36)   
TALXPC=COEFFICIENTS(1,37)   
TALXAC=COEFFICIENTS(1,38)   
TAEDTC=COEFFICIENTS(1,39)   
TAEXPC=COEFFICIENTS(1,40)   
TAEXAC=COEFFICIENTS(1,41)   
TARDTC=COEFFICIENTS(1,42)   
TARXPC=COEFFICIENTS(1,43)   
TARXAC=COEFFICIENTS(1,44)   

MW[141]=0
MW[142]=0
MW[143]=0
MW[144]=0
MW[145]=0
MW[146]=0
MW[147]=0
MW[148]=0
MW[149]=0

DA_NESTCOEF=  1.0 * 0.8
SR_NESTCOEF=  0.2 * 0.8
WLB_NESTCOEF= 1.0 * 0.5 * 0.3
WPR_NESTCOEF= 0.5 * 0.5 * 0.3
ALB_NESTCOEF= 1.0 * 0.5 * 0.3
APR_NESTCOEF= 0.5 * 0.5 * 0.3
endif


; Market Segmentation
  PSHORT=   ZI.2.PSHORT[I]
  PLONG=    ZI.2.PLONG[I]

  MW[301]=MW[1] * ZI.1.AUTO0                                              ; Auto 0
       MW[311]=MW[301] * PSHORT * ZI.2.ASHORT[J]                          ; P Short Walk - A Short Walk
       MW[312]=MW[301] * PSHORT * ZI.2.ALONG[J]                           ; P Short Walk - A Long Walk
       MW[313]=MW[301] * PLONG * ZI.2.ASHORT[J]                           ; P Long Walk - A Short Walk
       MW[314]=MW[301] * PLONG * ZI.2.ALONG[J]                            ; P Long Walk - A Long Walk
       MW[315]=MW[301] * (1 - PSHORT - PLONG) * ZI.2.ASHORT[J]            ; Auto - A Short Walk
       MW[316]=MW[301] * (1 - PSHORT - PLONG) * ZI.2.ALONG[J]             ; Auto - A Long Walk
       MW[317]=MW[301]-(MW[311]+MW[312]+MW[313]+MW[314]+MW[315]+MW[316])  ; No Transit


  MW[302]=MW[1] * ZI.1.AUTO1                                              ; Auto 1
       MW[321]=MW[302] * PSHORT * ZI.2.ASHORT[J]                          ; P Short Walk - A Short Walk
       MW[322]=MW[302] * PSHORT * ZI.2.ALONG[J]                           ; P Short Walk - A Long Walk
       MW[323]=MW[302] * PLONG * ZI.2.ASHORT[J]                           ; P Long Walk - A Short Walk
       MW[324]=MW[302] * PLONG * ZI.2.ALONG[J]                            ; P Long Walk - A Long Walk
       MW[325]=MW[302] * (1 - PSHORT - PLONG) * ZI.2.ASHORT[J]            ; Auto - A Short Walk
       MW[326]=MW[302] * (1 - PSHORT - PLONG) * ZI.2.ALONG[J]             ; Auto - A Long Walk
       MW[327]=MW[302]-(MW[321]+MW[322]+MW[323]+MW[324]+MW[325]+MW[326])  ; No Transit


  MW[303]=MW[1] * ZI.1.AUTO2                                              ; Auto 2
       MW[331]=MW[303] * PSHORT * ZI.2.ASHORT[J]                          ; P Short Walk - A Short Walk
       MW[332]=MW[303] * PSHORT * ZI.2.ALONG[J]                           ; P Short Walk - A Long Walk
       MW[333]=MW[303] * PLONG * ZI.2.ASHORT[J]                           ; P Long Walk - A Short Walk
       MW[334]=MW[303] * PLONG * ZI.2.ALONG[J]                            ; P Long Walk - A Long Walk
       MW[335]=MW[303] * (1 - PSHORT - PLONG) * ZI.2.ASHORT[J]            ; Auto - A Short Walk
       MW[336]=MW[303] * (1 - PSHORT - PLONG) * ZI.2.ALONG[J]             ; Auto - A Long Walk
       MW[337]=MW[303]-(MW[331]+MW[332]+MW[333]+MW[334]+MW[335]+MW[336])  ; No Transit


;; USE MW[501] TO MW[507] FOR WALKPATRAN
MW[501]=ZI.2.PRDSHT[I]+ZI.2.ATTSHT[J]
MW[502]=ZI.2.PRDSHT[I]+ZI.2.ATTLNG[J]
MW[503]=ZI.2.PRDLNG[I]+ZI.2.ATTSHT[J]
MW[504]=ZI.2.PRDLNG[I]+ZI.2.ATTLNG[J]
MW[505]=999.9
MW[506]=999.9
MW[507]=999.9
;; USE MW[511] TO MW[517] FOR WALKPAPR
MW[511]=ZI.4.STWALKPR[I]+ZI.2.ATTSHT[J]
MW[512]=ZI.4.STWALKPR[I]+ZI.2.ATTLNG[J]
MW[513]=ZI.4.STWALKPR[I]+ZI.2.ATTSHT[J]
MW[514]=ZI.4.STWALKPR[I]+ZI.2.ATTLNG[J]
MW[515]=ZI.4.STWALKPR[I]+ZI.2.ATTSHT[J]
MW[516]=ZI.4.STWALKPR[I]+ZI.2.ATTLNG[J]
MW[517]=999.9

LOOP ACC=1,7

; Zonal Variables
  PCODWLK=  ZI.2.CODWLK[I]
  PTERMTIME=ZI.3.TERMTIME[I]
  PCBD=     ZI.3.CBD[I]
  PEXURB=   ZI.3.EXURB[I]


; ===================================================================================
; HBW (PEAK) TRIP PURPOSE
; ===================================================================================

  ;   TOTAL AUTO PERSONS/DRIVE ALONE ELEMENTS OF UTILITY ARE:
      MW[11]=TERMCOEF*(ptermtime+ZI.3.TERMTIME[J]) +
            AAUTORUNC*(MI.2.CGTIME-MI.2.CGTOLL*CTOLL*60.0) +
            ACOSTC*(AOC*MI.2.CGDIST+MI.2.CGTOLL*100)*AUTOINFC +
            PARKC*ZI.3.PKCOSTPK[J]*0.5*PARKINFC +
            AU1DTC*(PCBD+ZI.3.CBD[J]) + AU1XPC*PEXURB + AU1XAC*ZI.3.EXURB[J]
  ;   COMPOSITE UTILITY
      MW[021]=(MW[11]+K_DA_AUTO0)/DA_NESTCOEF
      MW[031]=(MW[11]+K_DA_AUTO1)/DA_NESTCOEF
      MW[041]=(MW[11]+K_DA_AUTO2)/DA_NESTCOEF


  ;   SHARED RIDE PERSONS/SHARE RIDE - ONE PASSENGER ELEMENTS OF UTILITY ARE:
      MW[11]=TERMCOEF*(ptermtime+ZI.3.TERMTIME[J]) +
            AAUTORUNC*(MI.3.HOVCGTIME-MI.3.HOVCGTOLL*CTOLL*60.0) +
            HOVDIFFC*MAX(((MI.3.HOVCGTIME-MI.3.HOVCGTOLL*CTOLL*60.0) -
           (MI.2.CGTIME-MI.2.CGTOLL*CTOLL*60.0)),0) +
           (ACOSTC*(AOC*MI.3.HOVCGDIST+MI.3.HOVCGTOLL*100.0)*AUTOINFC)/OC2 +
           (PARKC*ZI.3.PKCOSTPK[J]*0.5*PARKINFC)/OC2 +
           (AU2DTC*(PCBD+ZI.3.CBD[J])) + (AU2XPC*PEXURB) + (AU2XAC*ZI.3.EXURB[J])
  ;   COMPOSITE UTILITY
      MW[022]=(MW[11]+K_SR1PASS_AUTO0)/SR_NESTCOEF
      MW[032]=(MW[11]+K_SR1PASS_AUTO1)/SR_NESTCOEF
      MW[042]=(MW[11]+K_SR1PASS_AUTO2)/SR_NESTCOEF


  ;   SHARED RIDE - 2+ PASSENGER ELEMENTS OF UTILITY ARE:
      MW[11]=TERMCOEF*(ptermtime+ZI.3.TERMTIME[J]) +
            AAUTORUNC*(MI.3.HOVCGTIME-MI.3.HOVCGTOLL*CTOLL*60.0) +
            HOVDIFFC*MAX(((MI.3.HOVCGTIME-MI.3.HOVCGTOLL*CTOLL*60.0) -
           (MI.2.CGTIME-MI.2.CGTOLL*CTOLL*60.0)),0) +
           (ACOSTC*(AOC*MI.3.HOVCGDIST+MI.3.HOVCGTOLL*100.0)*AUTOINFC)/OC3 +
           (PARKC*ZI.3.PKCOSTPK[J]*0.5*PARKINFC)/OC3 + 
           (AU3DTC*(PCBD+ZI.3.CBD[J])) + (AU3XPC*PEXURB) + (AU3XAC*ZI.3.EXURB[J])
  ;   COMPOSITE UTILITY
      MW[023]=(MW[11]+K_SR2PASS_AUTO0)/SR_NESTCOEF
      MW[033]=(MW[11]+K_SR2PASS_AUTO1)/SR_NESTCOEF
      MW[043]=(MW[11]+K_SR2PASS_AUTO2)/SR_NESTCOEF


  ;   TOTAL TRANSIT/ WALK ACCESS/ WALK ACCESS - LOCAL BUS ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[500+ACC] + MAX((MI.4.WALKTIME-PCODWLK-ZI.2.CODWLK[J]),0.0)) + 
            WTTAC*(MIN(MI.4.IWAIT,7.0)) +
            WTTBC*(MAX((MI.4.IWAIT-7.0),0.0)) +
            XFTC*MI.4.XWAIT + NXFC*MI.4.XFERS + 
            FAREC*MI.4.FARE*100*FAREINFC +
            TWLDTC*(PCBD+ZI.3.CBD[J]) + TWLXPC*PEXURB + TWLXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.4.LBTIME+MI.4.EBTIME+MI.4.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.4.LBTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[024]=(MW[11]+MW[12]+K_WALKLOC_AUTO0)/WLB_NESTCOEF
      MW[034]=(MW[11]+MW[12]+K_WALKLOC_AUTO1)/WLB_NESTCOEF
      MW[044]=(MW[11]+MW[12]+K_WALKLOC_AUTO2)/WLB_NESTCOEF


  ;   WALK ACCESS (PREMIUM / EXPRS BUS)ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[500+ACC] + MAX((MI.5.WALKTIME-PCODWLK-ZI.2.CODWLK[J]),0.0)) + 
            WTTAC*(MIN(MI.5.IWAIT,7.0)) +
            WTTBC*(MAX((MI.5.IWAIT-7.0),0.0)) +
            XFTC*MI.5.XWAIT + NXFC*MI.5.XFERS + 
            FAREC*MI.5.FARE*100*FAREINFC +
            TWEDTC*(PCBD+ZI.3.CBD[J]) + TWEXPC*PEXURB + TWEXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.5.LBTIME+MI.5.EBTIME+MI.5.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.5.EBTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[025]=(MW[11]+MW[12]+K_WLKPREB_AUTO0)/WPR_NESTCOEF
      MW[035]=(MW[11]+MW[12]+K_WLKPREB_AUTO1)/WPR_NESTCOEF
      MW[045]=(MW[11]+MW[12]+K_WLKPREB_AUTO2)/WPR_NESTCOEF


  ;   WALK ACCESS - RAIL ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[500+ACC] + MAX((MI.6.WALKTIME-PCODWLK-ZI.2.CODWLK[J]),0.0)) + 
            WTTAC*(MIN(MI.6.IWAIT,7.0)) +
            WTTBC*(MAX((MI.6.IWAIT-7.0),0.0)) +
            XFTC*MI.6.XWAIT + NXFC*MI.6.XFERS + 
            FAREC*MI.6.FARE*100*FAREINFC +
            TWRDTC*(PCBD+ZI.3.CBD[J]) + TWRXPC*PEXURB + TWRXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.6.LBTIME+MI.6.EBTIME+MI.6.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.6.RLTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[026]=(MW[11]+MW[12]+K_WLKPRER_AUTO0)/WPR_NESTCOEF
      MW[036]=(MW[11]+MW[12]+K_WLKPRER_AUTO1)/WPR_NESTCOEF
      MW[046]=(MW[11]+MW[12]+K_WLKPRER_AUTO2)/WPR_NESTCOEF


  ;   AUTO ACCESS/AUTO ACCESS - LOCAL BUS ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[510+ACC] + MAX((MI.7.WALKTIME-ZI.2.CODWLK[J]),0.0)) + 
            AAUTORUNC*MI.7.AUTOTIME +
            WTTAC*(MIN(MI.7.IWAIT,7.0)) +
            WTTBC*(MAX((MI.7.IWAIT-7.0),0.0)) +
            XFTC*MI.7.XWAIT + NXFC*MI.7.XFERS +
            FAREC*(MI.7.FARE*100+(.5*ZI.4.STPKCS1/OCTA))*FAREINFC +
            ACOSTC*(MI.7.AUTOTIME/60.0*TASPD*AOC/OCTA)*AUTOINFC +
            TALDTC*(PCBD+ZI.3.CBD[J]) + TALXPC*PEXURB + TALXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.7.LBTIME+MI.7.EBTIME+MI.7.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.7.LBTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[027]=(MW[11]+MW[12]+K_AUTOLOC_AUTO0)/ALB_NESTCOEF
      MW[037]=(MW[11]+MW[12]+K_AUTOLOC_AUTO1)/ALB_NESTCOEF
      MW[047]=(MW[11]+MW[12]+K_AUTOLOC_AUTO2)/ALB_NESTCOEF


  ;   AUTO ACCESS (PREMIUM/EXPRS BUS) ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[510+ACC] + MAX((MI.8.WALKTIME-ZI.2.CODWLK[J]),0.0)) + 
            AAUTORUNC*MI.8.AUTOTIME +
            WTTAC*(MIN(MI.8.IWAIT,7.0)) +
            WTTBC*(MAX((MI.8.IWAIT-7.0),0.0)) +
            XFTC*MI.8.XWAIT + NXFC*MI.8.XFERS +
            FAREC*(MI.8.FARE*100+(.5*ZI.4.STPKCS1/OCTA))*FAREINFC +
            ACOSTC*(MI.8.AUTOTIME/60.0*TASPD*AOC/OCTA)*AUTOINFC +
            TAEDTC*(PCBD+ZI.3.CBD[J]) + TAEXPC*PEXURB + TAEXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.8.LBTIME+MI.8.EBTIME+MI.8.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.8.EBTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[028]=(MW[11]+MW[12]+K_AUTOPREB_AUTO0)/APR_NESTCOEF
      MW[038]=(MW[11]+MW[12]+K_AUTOPREB_AUTO1)/APR_NESTCOEF
      MW[048]=(MW[11]+MW[12]+K_AUTOPREB_AUTO2)/APR_NESTCOEF


  ;   AUTO ACCESS - RAIL ELEMENTS OF UTILITY ARE:
      MW[11]=WALKC*(MW[510+ACC] + MAX((MI.9.WALKTIME-ZI.2.CODWLK[J]),0.0)) + 
            AAUTORUNC*MI.9.AUTOTIME +
            WTTAC*(MIN(MI.9.IWAIT,7.0)) +
            WTTBC*(MAX((MI.9.IWAIT-7.0),0.0)) +
            XFTC*MI.9.XWAIT + NXFC*MI.9.XFERS +
            FAREC*(MI.9.FARE*100+(.5*ZI.4.STPKCS1/OCTA))*FAREINFC +
            ACOSTC*(MI.9.AUTOTIME/60.0*TASPD*AOC/OCTA)*AUTOINFC +
            TARDTC*(PCBD+ZI.3.CBD[J]) + TARXPC*PEXURB + TARXAC*ZI.3.EXURB[J]
      MW[12]=TRUNC*(MI.9.LBTIME+MI.9.EBTIME+MI.9.RLTIME)
      JLOOP
        IF (MW[12]=0 || MI.9.RLTIME=0) MW[12]=-999.99
      ENDJLOOP
  ;   COMPOSITE UTILITY
      MW[029]=(MW[11]+MW[12]+K_AUTORAIL_AUTO0)/APR_NESTCOEF
      MW[039]=(MW[11]+MW[12]+K_AUTORAIL_AUTO1)/APR_NESTCOEF
      MW[049]=(MW[11]+MW[12]+K_AUTORAIL_AUTO2)/APR_NESTCOEF

; HBW (AUTO0)
      DMD=ACC+310
      XCHOICE ALTERNATIVES=DA SR1PASS SR2PASS WALKLOC WLKPREB WLKPRER AUTOLOC AUTOPREB AUTORAIL,
      UTILITIESMW=21,22,23,24,25,26,27,28,29,
      DEMANDMW=DMD,
      ODEMANDMW=401,402,403,404,405,406,407,408,409,
      STARTMW=520,
;     Model Structure
;     Top level nest
      SPLIT=TOTAL  0.8 TOTAUTOS 0.3 TRANSIT,
;     Totautos nest
      SPLIT=TOTAUTOS  1.0  DA  0.2  SHRIDE,
;     Shride nest
      SPLIT=SHRIDE   1.0 SR1PASS 1.0 SR2PASS,
;     Transit nest
      SPLIT= TRANSIT  0.5 WALKACC 0.5 AUTOACC,
;     Walkacc nest
      SPLIT= WALKACC  1.0 WALKLOC 0.5 WALKPRE,
;     Walkpre nest
      SPLIT= WALKPRE  1.0 WLKPREB 1.0 WLKPRER,
;     Autoacc nest
      SPLIT= AUTOACC  1.0 AUTOLOC 0.5 AUTOPRE,
;     Autopre nest
      SPLIT= AUTOPRE  1.0 AUTOPREB 1.0 AUTORAIL

; HBW (AUTO1)
      DMD=ACC+320
      XCHOICE ALTERNATIVES=DA SR1PASS SR2PASS WALKLOC WLKPREB WLKPRER AUTOLOC AUTOPREB AUTORAIL,
      DEMANDMW=DMD,
      UTILITIESMW=31,32,33,34,35,36,37,38,39,
      ODEMANDMW=411,412,413,414,415,416,417,418,419,
      STARTMW=520,
;     Model Structure
;     Top level nest
      SPLIT=TOTAL  0.8 TOTAUTOS 0.3 TRANSIT,
;     Totautos nest
      SPLIT=TOTAUTOS   1.0 DA  0.2  SHRIDE,
;     Shride nest
      SPLIT=SHRIDE   1.0 SR1PASS 1.0 SR2PASS,
;     Transit nest
      SPLIT= TRANSIT  0.5 WALKACC 0.5 AUTOACC,
;     Walkacc nest
      SPLIT= WALKACC  1.0 WALKLOC 0.5 WALKPRE,
;     Walkpre nest
      SPLIT= WALKPRE  1.0 WLKPREB 1.0 WLKPRER,
;     Autoacc nest
      SPLIT= AUTOACC  1.0 AUTOLOC 0.5 AUTOPRE,
;     Autopre nest
      SPLIT= AUTOPRE  1.0 AUTOPREB 1.0 AUTORAIL


; HBW (AUTO2)
      DMD=ACC+330
      XCHOICE ALTERNATIVES=DA SR1PASS SR2PASS WALKLOC WLKPREB WLKPRER AUTOLOC AUTOPREB AUTORAIL,
      DEMANDMW=DMD,
      UTILITIESMW=41,42,43,44,45,46,47,48,49,
      ODEMANDMW=421,422,423,424,425,426,427,428,429,
      STARTMW=520,
;     Model Structure
;     Top level nest
      SPLIT=TOTAL  0.8 TOTAUTOS 0.3 TRANSIT,
;     Totautos nest
      SPLIT=TOTAUTOS  1.0 DA  0.2  SHRIDE,
;     Shride nest
      SPLIT=SHRIDE  1.0 SR1PASS 1.0 SR2PASS,
;     Transit nest
      SPLIT= TRANSIT  0.5 WALKACC 0.5 AUTOACC,
;     Walkacc nest
      SPLIT= WALKACC  1.0 WALKLOC 0.5 WALKPRE,
;     Walkpre nest
      SPLIT= WALKPRE  1.0 WLKPREB 1.0 WLKPRER,
;     Autoacc nest
      SPLIT= AUTOACC  1.0 AUTOLOC 0.5 AUTOPRE,
;     Autopre nest
      SPLIT= AUTOPRE  1.0 AUTOPREB 1.0 AUTORAIL

MW[141]=MW[141]+MW[401]+MW[411]+MW[421]                     ; DA          X
MW[142]=MW[142]+MW[402]+MW[412]+MW[422]                     ; SR1PASS     X
MW[143]=MW[143]+MW[403]+MW[413]+MW[423]                     ; SR2PASS     X
MW[144]=MW[144]+MW[404]+MW[414]+MW[424]                     ; WALKLOC     X
MW[145]=MW[145]+MW[405]+MW[415]+MW[425]                     ; WLKPREB     X
MW[146]=MW[146]+MW[406]+MW[416]+MW[426]                     ; WLKPRER     X
MW[147]=MW[147]+MW[407]+MW[417]+MW[427]                     ; AUTOLOC     X
MW[148]=MW[148]+MW[408]+MW[418]+MW[428]                     ; AUTOPREB    X
MW[149]=MW[149]+MW[409]+MW[419]+MW[429]                     ; AUTORAIL    X

ENDLOOP


; Assign intrazonal from SR1PASS and SR2PASS to DA
INTRAZONAL MW[141]=MW[141]+MW[142]+mw[143]
INTRAZONAL MW[142]=0
INTRAZONAL MW[143]=0

; OUTPUT
MW[151]=MW[141]+MW[142]+MW[143]                             ; TOTAUTOS
MW[152]=MW[141]                                             ; DA          X
MW[153]=MW[142]+MW[143]                                     ; SHRIDE
MW[154]=MW[142]                                             ; SR1PASS     X
MW[155]=MW[143]                                             ; SR2PASS     X
MW[156]=MW[144]+MW[145]+MW[146]+MW[147]+MW[148]+MW[149]     ; TRANSIT
MW[157]=MW[144]+MW[145]+MW[146]                             ; WALKACC     
MW[158]=MW[144]                                             ; WALKLOC     X
MW[159]=MW[145]+MW[146]                                     ; WALKPRE     
MW[160]=MW[145]                                             ; WLKPREB     X
MW[161]=MW[146]                                             ; WLKPRER     X
MW[162]=MW[147]+MW[148]+MW[149]                             ; AUTOACC
MW[163]=MW[147]                                             ; AUTOLOC     X
MW[164]=MW[148]+MW[149]                                     ; AUTOPRE
MW[165]=MW[148]                                             ; AUTOPREB    X
MW[166]=MW[149]                                             ; AUTORAIL    X

ENDRUN
